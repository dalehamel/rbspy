name: Create Core Dump

on:
  workflow_dispatch:
    inputs:
      ruby-version:
        description: 'Ruby version'
        required: true

permissions:
  contents: read

jobs:
  create-core-dump:
    runs-on: ubuntu-24.04

    steps:
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ inputs.ruby-version }}

      - name: Install Rust
        uses: dtolnay/rust-toolchain@4305c38b25d97ef35a8ad1f985ccf2d2242004f2 # stable branch

      - name: Install gdb
        run: sudo apt-get install -y gdb

      - name: Check out rbspy source
        uses: actions/checkout@v4

      - name: Cargo Cache
        uses: Swatinem/rust-cache@v2.7.8
        with:
          prefix-key: "20230109"
      
      - name: Build rbspy
        run: cargo build --release
      
      - name: Run Ruby script
        id: ruby-script
        run: |
          ruby ci/ruby-programs/cme_complex_labels.rb &
          pid=$!
          echo "pid=$pid" >> $GITHUB_OUTPUT

      - name: Inspect process
        run: sudo ./target/release/rbspy inspect --pid ${{ steps.ruby-script.outputs.pid }}

      # default coredump filter is 0x33, update it to basically dump all memory here
      # to best mimic the real process otherwise heap data like strings may not
      # be accessible
      - name: Create core dump
        shell: sudo bash {0}
        run: |
          echo 0x7f > /proc/${{ steps.ruby-script.outputs.pid }}/coredump_filter
          gcore ${{ steps.ruby-script.outputs.pid }}
          mv core.${{ steps.ruby-script.outputs.pid }} ruby-coredump-${{ inputs.ruby-version }}
          gzip -9 ruby-coredump-${{ inputs.ruby-version }}

      - name: Upload core dump
        uses: actions/upload-artifact@v4
        with:
          name: ruby-coredump-${{ inputs.ruby-version }}.gz
          path: ruby-coredump-${{ inputs.ruby-version }}.gz
